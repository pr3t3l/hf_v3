rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    match /families/{familyId} {

      function isAdmin() {
        return isSignedIn() && request.auth.uid in resource.data.adminUserIds;
      }
      function isMember() {
        return isSignedIn() && resource.data.memberUserIds.map(m => m.userId).hasAny([request.auth.uid]);
      }
      function isPending() {
        return isSignedIn() && resource.data.usersPending != null && resource.data.usersPending.hasAny([request.auth.uid]);
      }

      allow read: if isAdmin() || isMember() || isPending();
      allow update: if isAdmin() || (isPending() &&
        request.resource.data.memberUserIds.map(m => m.userId).hasAny([request.auth.uid]));
      allow create: if isSignedIn();
    }

    match /invitations/{invitationId} {
      allow read: if isSignedIn() &&
        (request.auth.uid == resource.data.invitedUserId ||
         request.auth.uid == resource.data.invitedByUserId);
      allow update: if isSignedIn() && request.auth.uid == resource.data.invitedUserId;
      allow create, delete: if false;
    }
  }
}

